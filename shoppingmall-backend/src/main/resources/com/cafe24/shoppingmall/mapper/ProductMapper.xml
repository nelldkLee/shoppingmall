<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.shoppingmall.mapper.ProductMapper">
	
	<!-- 완료 -->
	<insert id="insert" parameterType="productvo">
		INSERT INTO product(product_name, description, price, main_image_path, display_active, selling_active, option_active, regdate) 
			VALUES(#{productName}, #{description}, #{price}, #{mainImagePath}, #{displayActive}, #{sellingActive}, #{optionActive}, now())
			
		<selectKey keyProperty="productNo" resultType="long" order="AFTER">
			select
			last_insert_id()
		</selectKey> 
	</insert>
	
	<insert id="insertProductCategory" parameterType="productvo">
		INSERT INTO product_category(product_no, category_no) 
			VALUES
			<foreach item="item" collection="categoryList" separator=",">
			(#{productNo}, #{item.categoryNo})
			</foreach>
	</insert>
	
	<resultMap type="com.cafe24.shoppingmall.domain.OptionVO" id="optionMap">
		<result property="itemNo" column="itemNo" />
		<result property="optionName" column="optionName" />
		<result property="optionValue" column="optionValue" />
	</resultMap>
	
	
	<resultMap type="com.cafe24.shoppingmall.domain.ItemVO" id="itemMap">
		<id property="itemNo" column="itemNo" />
		<result property="stock" column="stock" />
		<collection property="optionList" resultMap="optionMap" />
	</resultMap>
	
	
	<resultMap type="com.cafe24.shoppingmall.domain.ProductVO" id="productMap">
		<id property="productNo" column="productNo" />
		<result property="productName" column="productName" />
		<result property="description" column="description" />
		<result property="price" column="price" />
		<result property="mainImagePath" column="mainImagePath" />
		<result property="displayActive" column="displayActive" />
		<result property="sellingActive" column="sellingActive" />
		<result property="regdate" column="regdate" />
		<collection property="itemList" resultMap="itemMap" />
	</resultMap>
	
	
	
	<select id="read" resultMap="productMap" parameterType="long">
		SELECT 	p.product_no productNo, product_name productName, main_image_path mainImagePath, description, price, display_active displayActive, selling_active sellingActive, 
				regdate, i.stock stock, i.item_no itemNo, o.option_name optionName, o.option_value optionValue  
			FROM product p, item i, shoppingmall.`option` o
		WHERE 	p.product_no = i.product_no and 
				i.item_no = o.item_no and
				p.product_no = #{no}
	</select>
	
	<update id="update" parameterType="productvo">
		UPDATE product 
			SET product_name = #{productName}, 
				description = #{description},
				price = #{price},
				main_image_path = #{mainImagePath}, 
				option_active = #{optionActive},
				display_active = #{displayActive}, 
				selling_active = #{sellingActive} 
		WHERE product_no = #{productNo}
	</update>
	
	<delete id="delete" parameterType="long">
		DELETE from product WHERE product_no = #{no} 
	</delete>
	
	<!-- 진행 해야함. -->
	<select id="getList" parameterType="criteria" resultType="productvo">
		SELECT 
			product_no productNo, product_name productName, description, main_image_path mainImagePath, price, display_active displayActivce, selling_active sellingActive, regdate  
		FROM product 
		ORDER BY product_no DESC LIMIT #{limitStart}, #{perPageSize}  
	</select>
	
	<select id="getTotal" resultType="int">
		SELECT count(*) from product
	</select>
	
</mapper>
